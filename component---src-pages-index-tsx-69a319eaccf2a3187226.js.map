{"version":3,"file":"component---src-pages-index-tsx-69a319eaccf2a3187226.js","mappings":"mPAMMA,GAAwB,cAAH,mBAAG,CAAH,oKASd,qBAAGC,QATW,yBAYH,qBAAGA,QAZA,8FAkBJC,EAAAA,GAAAA,GAlBI,yCA2BrBC,GAAiB,eAAH,mBAAG,CAAH,8PAkBF,qBAAGF,QAlBD,8BAuBP,qBAAGA,QAvBI,0BA8BdG,GAAoB,cAAH,mBAAG,CAAH,oFAMjBC,GAAiB,cAAH,mBAAG,CAAH,+CAGdC,GAAkB,OAAOH,EAAP,oFAGtBI,cAAc,IAHQ,qBAmCxB,EA1BgE,SAAC,GAAa,IAAXC,EAAW,EAAXA,KAE/DC,EACED,EADFC,YAAaC,EACXF,EADWE,IAAKC,EAChBH,EADgBG,gBAAiBC,EACjCJ,EADiCI,KAAMC,EACvCL,EADuCK,YAG3C,OAAOL,GAAQA,EAAKI,MAClB,QAACZ,EAAD,CAAuBC,MAAOU,EAAgBV,QAE5C,aAAGa,KAAMJ,EAAIK,QAAQ,WAAY,eAAgBC,OAAO,SAASC,IAAI,wBACnE,QAACd,EAAD,CAAgBF,MAAOU,EAAgBV,OACpCW,KAGL,QAACR,EAAD,KAAoBS,GACnBJ,IACC,QAACH,EAAD,CAAiBL,MAAOU,EAAgBV,MAAOa,KAAML,GAArD,yBAIF,QAACJ,EAAD,KAAiBM,EAAgBC,QAGnC,0BC9FEM,GAAY,cAAH,mBAAG,CAAH,iFAOTC,GAAS,cAAH,mBAAG,CAAH,qYA8BNC,GAAW,cAAH,mBAAG,CAAH,4FAORC,GAAU,YAAH,mBAAG,CAAH,0IAWPC,GAAgB,aAAH,mBAAG,CAAH,yFAMbC,GAAiB,cAAH,mBAAG,CAAH,mHAQdC,GAAc,YAAH,mBAAG,CAAH,4FAQXC,GAAiB,cAAH,mBAAG,CAAH,+HASdC,EAAcF,EAAYjB,cAAcoB,EAAAA,GAA1B,qBA2EpB,EA1DwC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtC,QAAC,IAAD,MACE,QAACC,EAAA,EAAD,MACE,QAACX,EAAD,MACE,QAACC,EAAD,MACE,QAACC,EAAD,MACE,QAACC,EAAD,sGAIA,QAACA,EAAD,6CAEE,QAACK,EAAD,CAAaI,GAAG,WAAhB,iCAID,KACD,QAACT,EAAD,6CAEE,QAACG,EAAD,CAAaV,KAAK,kCAAlB,+BAMN,QAACQ,EAAD,yBACA,QAACC,EAAD,MACE,QAAC,EAAD,CAAqBf,KAAMoB,EAAKG,OAAOC,KAAKC,eAC5C,QAAC,EAAD,CAAqBzB,KAAMoB,EAAKG,OAAOC,KAAKE,QAC5C,QAAC,EAAD,CAAqB1B,KAAMoB,EAAKG,OAAOC,KAAKG,SAC5C,QAAC,EAAD,CAAqB3B,KAAMoB,EAAKG,OAAOC,KAAKI,mBAC5C,QAAC,EAAD,CAAqB5B,KAAMoB,EAAKG,OAAOC,KAAKK,SAC5C,QAAC,EAAD,CAAqB7B,KAAMoB,EAAKG,OAAOC,KAAKM,oBAE9C,QAAChB,EAAD,CAAeiB,GAAG,WAAlB,YACA,QAACd,EAAD,MACE,2CACA,4CACA,+BAEE,aAAGX,KAAK,+BAAR,0BAEF,+BAEE,aACEA,KAAK,iCACLE,OAAO,SACPC,IAAI,uBAHN","sources":["webpack://lshadler.github.io/./src/components/GithubViewer.tsx","webpack://lshadler.github.io/./src/pages/index.tsx"],"sourcesContent":["/* eslint-disable camelcase */\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { breakpoints } from '../styles/variables';\nimport { GithubRepoInfo } from '../types.ts/index';\n\nconst GithubViewerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  transition: all 200ms ease-in;\n  background-color: var(--cardBg);\n  color: var(--textCard);\n\n  :hover {\n    color: ${({ color }) => color};\n  }\n\n  border: 1.5px solid ${({ color }) => color};\n  border-radius: 5px;\n  margin: 0.5em 0;\n  padding: 1em;\n  min-width: 30%;\n  flex-basis: 0;\n  @media (max-width: ${breakpoints.md}px) {\n    min-width: 100%;\n  }\n\n  a {\n    color: inherit;\n  }\n`;\n\nconst GithubRepoName = styled.span`\n  font-size: 1.2rem;\n  color: inherit;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-decoration: none;\n  text-overflow: scroll;\n  display: inline-block;\n  position: relative;\n\n  :after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 0%;\n    content: \".\";\n    color: transparent;\n    background: ${({ color }) => color};\n    height: 1px;\n  }\n\n  :hover {\n    color: ${({ color }) => color};\n    ::after {\n      width: 100%;\n    }\n  }\n`;\n\nconst GithubDescription = styled.div`\n    color: var(--textCard);\n    align-self: center;\n    padding: 0 1.5rem;\n`;\n\nconst GithubLanguage = styled.div`\n    align-self: flex-end;\n`;\nconst GithubPagesLink = styled(GithubRepoName)`\n    font-size: 1rem;\n    align-self: flex-end;\n`.withComponent('a');\n\ninterface GithubProjectViewerProps {\n  repo: GithubRepoInfo\n}\n\nconst GithubProjectViewer: React.FC<GithubProjectViewerProps> = ({ repo }) => {\n  const {\n    homepageUrl, url, primaryLanguage, name, description,\n  } = repo;\n\n  return repo && repo.name ? (\n    <GithubViewerContainer color={primaryLanguage.color}>\n      {/* Temporary rewrite */}\n      <a href={url.replace('lshadler', 'sumwatshade')} target=\"_blank\" rel=\"noopener noreferrer\">\n        <GithubRepoName color={primaryLanguage.color}>\n          {name}\n        </GithubRepoName>\n      </a>\n      <GithubDescription>{description}</GithubDescription>\n      {homepageUrl && (\n        <GithubPagesLink color={primaryLanguage.color} href={homepageUrl}>\n          View on Github Pages\n        </GithubPagesLink>\n      )}\n      <GithubLanguage>{primaryLanguage.name}</GithubLanguage>\n    </GithubViewerContainer>\n  ) : (\n    <></>\n  );\n};\n\nexport default GithubProjectViewer;\n","import * as React from 'react';\nimport { graphql, Link } from 'gatsby';\n\nimport styled from '@emotion/styled';\nimport Page from '../components/Page';\nimport IndexLayout from '../layouts';\nimport GithubProjectViewer from '../components/GithubViewer';\nimport { GithubRepoInfo } from '../types.ts/index';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\n\nconst Window = styled.div`\n  border-radius: 3px;\n  background: #222;\n  color: #fff;\n  overflow: hidden;\n  position: relative;\n  margin: 0 auto;\n  width: 100%;\n  max-width: 800px;\n  &:before {\n    content: ' ';\n    display: block;\n    height: 48px;\n    background: #C6C6C6;\n  }\n  \n  &:after {\n    content: '. . .';\n    position: absolute;\n    left: 12px;\n    right: 0;\n    top: -3px;\n    font-family: \"Times New Roman\", Times, serif;\n    font-size: 96px;\n    color: #fff;\n    line-height: 0;\n    letter-spacing: -12px;\n  }\n`;\n\nconst Terminal = styled.div`\n  margin: 20px;\n  font-family: monospace;\n  font-size: 16px;\n  color: #22da26;\n}`;\n\nconst Command = styled.p`\n  width: 100%;\n  white-space: wrap;\n  overflow: wrap;\n  animation: write-command 5s both;\n  color: #22da26;\n  &:before {\n    content: \"$ \";\n  }\n`;\n\nconst SectionHeader = styled.h1`\n  align-self: flex-start;\n  color: var(--textTitle);\n  margin: 1.5rem 0;\n`;\n\nconst GithubProjects = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  width: 100%;\n`;\n\nconst ContactSpan = styled.a`\n  :hover {\n    color: goldenrod;\n  }\n  color: #22da26;\n  text-decoration: underline;\n`;\n\nconst ContactSection = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  border: 1px solid var(--textNormal);\n  border-radius: 5px;\n  padding: 1em;\n`;\n\nconst ContactLink = ContactSpan.withComponent(Link);\n\ninterface IndexProps {\n  data: {\n    github: {\n      user: {\n        site: GithubRepoInfo,\n        covid: GithubRepoInfo,\n        webpackDemo: GithubRepoInfo,\n        roost: GithubRepoInfo,\n        forwardMomentum: GithubRepoInfo,\n        indecisionPlaza: GithubRepoInfo,\n      }\n    }\n  }\n}\n\nconst IndexPage: React.FC<IndexProps> = ({ data }) => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <Window>\n          <Terminal>\n            <Command>\n              My name is Luke Shadler. I am a Full-Stack Software Engineer based\n              in San Diego, California.\n            </Command>\n            <Command>\n              Want more detailed experience data?&nbsp;\n              <ContactLink to=\"/resume\">\n                Click here to view my resume\n              </ContactLink>\n            </Command>\n            {' '}\n            <Command>\n              Let&apos;s make something cool together!&nbsp;\n              <ContactSpan href=\"https://github.com/sumwatshade\">\n                Let&apos;s connect on GitHub\n              </ContactSpan>\n            </Command>\n          </Terminal>\n        </Window>\n        <SectionHeader>Github Projects</SectionHeader>\n        <GithubProjects>\n          <GithubProjectViewer repo={data.github.user.webpackDemo} />\n          <GithubProjectViewer repo={data.github.user.site} />\n          <GithubProjectViewer repo={data.github.user.roost} />\n          <GithubProjectViewer repo={data.github.user.forwardMomentum} />\n          <GithubProjectViewer repo={data.github.user.covid} />\n          <GithubProjectViewer repo={data.github.user.indecisionPlaza} />\n        </GithubProjects>\n        <SectionHeader id=\"contact\">Contact</SectionHeader>\n        <ContactSection>\n          <div>Name: Lucas Shadler</div>\n          <div>Phone: (585)766-7886</div>\n          <div>\n            E-Mail:&nbsp;\n            <a href=\"mailto:lshadler13@gmail.com\">lshadler13@gmail.com</a>\n          </div>\n          <div>\n            Github:&nbsp;\n            <a\n              href=\"https://github.com/sumwatshade\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              sumwatshade\n            </a>\n          </div>\n        </ContactSection>\n      </Container>\n    </Page>\n  </IndexLayout>\n);\n\nexport default IndexPage;\n\nexport const query = graphql`\nfragment repoInfo on GitHub_Repository{\n  description\n  homepageUrl\n  url\n  name\n  primaryLanguage {\n    color\n    name\n  }\n}\n\nquery IndexQuery {\n  github {\n    user(login: \"sumwatshade\") {\n      site: repository(name: \"sumwatshade.github.io\") {\n        ...repoInfo\n      }\n      covid: repository(name: \"plugin-update\") {\n        ...repoInfo\n      }\n      webpackDemo: repository(name: \"webpack-demo\") {\n        ...repoInfo\n      }\n      roost: repository(name: \"roost\") {\n        ...repoInfo\n      }\n      forwardMomentum: repository(name: \"forward-momentum\") {\n        ...repoInfo\n      }\n      indecisionPlaza: repository(name: \"indecision-plaza\") {\n        ...repoInfo\n      }\n    }\n  }\n}\n`;\n"],"names":["GithubViewerContainer","color","breakpoints","GithubRepoName","GithubDescription","GithubLanguage","GithubPagesLink","withComponent","repo","homepageUrl","url","primaryLanguage","name","description","href","replace","target","rel","Container","Window","Terminal","Command","SectionHeader","GithubProjects","ContactSpan","ContactSection","ContactLink","Link","data","Page","to","github","user","webpackDemo","site","roost","forwardMomentum","covid","indecisionPlaza","id"],"sourceRoot":""}